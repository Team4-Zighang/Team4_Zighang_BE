name: CI-CD

on:
  push:
    branches: [ "main" ]

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with submodule
        uses: actions/checkout@v3
        with:
          token:  ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: ncp registry login
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: docker image build and push
        if: success()
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/core:${{ github.sha }}
          platforms: linux/amd64,linux/arm64

      - name: check files
        run: ls -al


      - name: Copy docker-compose-main.yml to NCP server
        if: contains(github.ref, 'main')
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PEM_KEY }}
          source: ./docker-compose-main.yml
          target: /root

      - name: Copy deploy.sh to NCP server
        if: contains(github.ref, 'main')
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PEM_KEY }}
          source: ./deploy.sh
          target: /root

      - name: Deploy to main
        if: contains(github.ref, 'main')
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PEM_KEY }}
          script: |
            cd /root
            chmod +x /root/deploy.sh
            /root/deploy.sh